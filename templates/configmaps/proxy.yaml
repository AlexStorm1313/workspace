apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-proxy
data:
  nginx: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /tmp/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        client_body_temp_path /tmp/client_temp;
        proxy_temp_path       /tmp/proxy_temp_path;
        fastcgi_temp_path     /tmp/fastcgi_temp;
        uwsgi_temp_path       /tmp/uwsgi_temp;
        scgi_temp_path        /tmp/scgi_temp;
        
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }

  listen: |
    listen 8080;
    listen [::]:8080;
    listen 8443 ssl;
    listen [::]:8443 ssl; 
  
  proxy: |
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_buffering off;
    proxy_request_buffering off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    proxy_pass $upstream;
  
  ssl: |
    http2 on;
    ssl_certificate /etc/nginx/certificates/certificate.crt;
    ssl_certificate_key /etc/nginx/certificates/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

  workspace: |
    server {
      include /etc/nginx/includes/listen.conf;

      server_name codium.workspace.localhost codium.workspace.fedora-workstation;
    
      include /etc/nginx/includes/ssl.conf;

      location / {
          resolver ${NGINX_RESOLVER};
          include /etc/nginx/includes/proxy.conf;
          set $upstream http://workspace-codium-pod:3000;
      }
    }

    server {
      include /etc/nginx/includes/listen.conf;

      server_name dbgate.workspace.localhost dbgate.workspace.fedora-workstation;
      
      include /etc/nginx/includes/ssl.conf;

      location / {
        resolver ${NGINX_RESOLVER};
        include /etc/nginx/includes/proxy.conf;
        set $upstream http://workspace-dbgate-pod:3000;
      }
    }

    server {
      include /etc/nginx/includes/listen.conf;

      server_name open-webui.workspace.localhost open-webui.workspace.fedora-workstation;

      include /etc/nginx/includes/ssl.conf;

      location / {
        resolver ${NGINX_RESOLVER};
        include /etc/nginx/includes/proxy.conf;
        set $upstream http://workspace-open-webui-pod:8080;
      }
    }

    server {
      include /etc/nginx/includes/listen.conf;

      server_name ollama.workspace.localhost ollama.workspace.fedora-workstation;

      include /etc/nginx/includes/ssl.conf;

      location / {
        resolver ${NGINX_RESOLVER};
        include /etc/nginx/includes/proxy.conf;
        set $upstream http://workspace-ollama-pod:11434;
      }
    }

    server {
      include /etc/nginx/includes/listen.conf;

      server_name theia.workspace.localhost theia.workspace.fedora-workstation;
    
      include /etc/nginx/includes/ssl.conf;

      location / {
          resolver ${NGINX_RESOLVER};
          include /etc/nginx/includes/proxy.conf;
          set $upstream http://workspace-theia-pod:3000;
      }
    }